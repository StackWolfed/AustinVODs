{"version":3,"sources":["components/searchbar.js","components/eventsList.js","App.js","serviceWorker.js","components/navbar.js","components/login.js","components/matchContainer.js","components/results.js","components/events.js","index.js"],"names":["SearchBar","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","player","handleSubmit","bind","assertThisInitialized","e","preventDefault","console","log","props","history","push","_this2","react_default","a","createElement","Form","onSubmit","InputGroup","style","paddingTop","Input","type","name","placeholder","value","onChange","setState","target","InputGroupAddon","addonType","Button","Component","withRouter","EventsList","isLoaded","data","getResponse","fetch","myAPI","then","res","json","result","error","_this3","textAlign","color","map","event","index","Link","id","to","onMouseOver","onHover","onMouseOut","onOut","textDecoration","padding","border","borderRadius","display","width","transform","backgroundColor","App","isLogged","path","window","location","pathname","hash","includes","replace","firebase","auth","onAuthStateChanged","user","Container","Row","Col","sm","md","size","offset","searchbar","eventsList_EventsList","Boolean","hostname","match","initializeApp","apiKey","authDomain","NavThing","isSignedIn","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","callbacks","signInSuccess","componentDidMount","currentUser","getIdToken","theThing","toggle","isOpen","signOut","Navbar","dark","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","logOut","displayName","Login","signInSuccessWithAuthResult","Redirect","StyledFirebaseAuth_default","firebaseAuth","MatchContainer","ID","imgURL","bgcolor","videoID","link","split","imgthing","fluid","p1","p2","borderColor","ch1","ch2","alt","src","height","Results","params","undefined","juice","matchContainer_MatchContainer","Events","evName","ReactDOM","render","navbar_NavThing","HashRouter","Switch","Route","exact","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6810cb0e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { InputGroup,\n        InputGroupAddon,\n        Input,\n        Button,\n        Form } from \"reactstrap\";\nimport { withRouter } from 'react-router-dom';\n//import firebase from \"firebase\";\n//API: https://script.google.com/macros/s/AKfycbxplAP3legxV6uzKfRu7fVyQfgkJ9OUvzoVm3zTe-qS5P2PIQ/exec?query=<search/pr>&player=<STRING>\n\nclass SearchBar extends Component {\n    constructor() {\n        super();\n        this.state = {\n            player: \"\"\n        }\n\n        this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        console.log(this.state.player);\n        this.props.history.push('/results/' + this.state.player);\n    }\n\n    render() {\n        return (\n            <div>\n                <Form onSubmit={(e) => this.handleSubmit(e)}>\n                    <InputGroup style={{paddingTop: \"10px\"}}>\n                        <Input  type=\"text\"\n                                name=\"search\"\n                                placeholder=\"Player Name\"\n                                value={this.state.player}\n                                onChange={e => this.setState({ player: e.target.value })}/>\n                        <InputGroupAddon addonType=\"append\"><Button >Search</Button></InputGroupAddon>\n                    </InputGroup>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(SearchBar);","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst myAPI = \"https://script.google.com/macros/s/AKfycbxplAP3legxV6uzKfRu7fVyQfgkJ9OUvzoVm3zTe-qS5P2PIQ/exec\";\n\nexport default class EventsList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoaded: false,\n            data: [],\n        }\n        this.getResponse.bind(this);\n    }\n\n    componentDidMount() {\n        this.getResponse();\n    }\n\n    getResponse() {\n        fetch(myAPI + \"?query=events\")\n        .then(res => res.json())\n        .then(\n            (result) => {\n                this.setState({\n                    isLoaded: true,\n                    data: result\n                });\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n                this.setState({\n                isLoaded: true,\n                error\n                });\n            }\n        )\n    }\n\n    render() {\n        return (\n            <div style={{paddingTop: \"20px\", textAlign: 'center', color: 'white'}}>\n                {\n                    this.state.isLoaded ?\n                        (<p>{this.state.data.map((event, index) => {\n                            return (<Link id={index} to={\"/event/\" + event} onMouseOver={this.onHover} onMouseOut={this.onOut} style={{textDecoration: 'none'}}><div style={{textAlign: 'center',\n                                                padding: '5px',\n                                                border: '2px solid #4d5256',\n                                                borderRadius: '25px',\n                                                display: 'inline-block',\n                                                width: '35em',\n                                                transform: 'translateY(' + (5 * index) + 'px)',\n                                                backgroundColor: '#4d5256'\n                                            }} id={event}>{event}</div></Link>\n                            );\n                        })}</p>)\n                    :\n                        (<p>Loading...</p>)\n                }\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport firebase from \"firebase\";\nimport { Container, Row, Col } from \"reactstrap\";\n\nimport SearchBar from \"./components/searchbar\";\nimport EventsList from './components/eventsList';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n        isLogged: false\n    }\n  }\n\n  componentDidMount() {\n    var path = window.location.pathname + window.location.hash;\n    if (path.includes(\"/AustinVODs#/AustinVODs#/\") || path.includes(\"AustinVODs/#/AustinVODs#/\")) {\n        window.location.replace(\"/AustinVODs\");\n    }\n    firebase.auth().onAuthStateChanged((user) => {\n        if (user != null) {\n            this.setState({\n                isLogged: true\n            });\n        } else {\n            this.setState({\n                isLogged: false\n            });\n        }\n      });\n  }\n\n  render() {\n    return (\n      <Container style={{backgroundColor: \"#333333\"}}>\n        <Row>\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }}><SearchBar /></Col>\n        </Row>\n        <EventsList />\n      </Container>\n    );\n  }\n}\n\n//Stateless\n/*\n  export const NAME = (props) => {\n    this is already\n    the render function\n  };\n*/\n//State\n/*\n  you need a constructor(props) {\n    super(props) // to call the parent constructor\n    this.state = {\n\n    };\n  }\n*/\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink} from 'reactstrap';\nimport firebase from \"firebase\";\n//import StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyCIPlwX5hVrpR42ETE1O7bwpQNNxMZB2mQ\",\n  authDomain: \"austinvods.firebaseapp.com\"\n})\n  \nexport default class NavThing extends Component {\n    constructor(props) {\n      super(props);\n  \n      this.toggle = this.toggle.bind(this);\n      this.state = {\n        isOpen: false\n      };\n    }\n\n    state = { isSignedIn: false }\n    uiConfig = {\n      signInFlow: \"popup\",\n      signInOptions: [\n        firebase.auth.GoogleAuthProvider.PROVIDER_ID\n      ],\n      callbacks: {\n        signInSuccess: () => false\n      }\n    }\n\n    componentDidMount = () => {\n      firebase.auth().onAuthStateChanged(user => {\n        this.setState({ isSignedIn: !!user });\n        //console.log(\"user\", user);\n        firebase.auth().currentUser.getIdToken().then(data => this.setState({theThing: data}))\n      });\n    }\n\n    toggle() {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    }\n\n    logOut() {\n      firebase.auth().signOut();\n    }\n    //Render Function --------------------------------------------------------------\n    render() {\n      return (\n        <div>\n          <Navbar color=\"dark\" dark expand=\"md\">\n            <NavbarBrand href=\"/AustinVODs\">AustinVODs</NavbarBrand>\n            <NavbarToggler onClick={this.toggle} />\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  {this.state.isSignedIn ? \n                  //(\"\" + firebase.auth().currentUser.getIdToken().i)\n                  (<NavLink onClick={this.logOut}>{firebase.auth().currentUser.displayName}</NavLink>)\n                  :\n                  (<NavLink href=\"#/login\">Login</NavLink>)\n                  }\n                </NavItem>\n              </Nav>\n            </Collapse>\n          </Navbar>\n        </div>\n      );\n    }\n}","import React, { Component } from 'react';\nimport firebase from \"firebase\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport { Row, Col, Container} from \"reactstrap\";\nimport { Redirect } from 'react-router-dom';\n\n// firebase.initializeApp({\n//     apiKey: \"AIzaSyDLoqcbTDMFuurtAyDgVEKZ6qwo0j0Osjk\",\n//     authDomain: \"fir-auth-tutorial-ed11f.firebaseapp.com\"\n//   })\n\nexport default class Login extends Component {\n    constructor() {\n        super();\n        this.state = {\n            isLogged: false\n        }\n    }\n\n    componentDidMount() {\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user != null) {\n                this.setState({\n                    isLogged: true\n                });\n            } else {\n                this.setState({\n                    isLogged: false\n                });\n            }\n          });\n    }\n\n    uiConfig = {\n        signInFlow: \"popup\",\n        signInOptions: [\n          firebase.auth.GoogleAuthProvider.PROVIDER_ID\n        ],\n        callbacks: {\n            signInSuccessWithAuthResult: () => false\n        }\n    }\n\n    render() {\n      return (\n        <div>\n          {this.state.isLogged ? \n            (   \n                <Container>\n                    <Row>\n                        <Col sm=\"12\" md={{ size: 6, offset: 5 }} style={{color: \"white\"}}>You're logged in</Col>\n                        <Redirect to=\"/\" />\n                    </Row>\n                </Container>\n            )\n          :\n            (<StyledFirebaseAuth\n                uiConfig={this.uiConfig}\n                firebaseAuth={firebase.auth()}\n              />)\n          }\n        </div>\n      );\n    }\n  }","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row,\n         Col } from \"reactstrap\";\n\nexport default class MatchContainer extends Component {\n    //props: p1, p2, link, ch1, ch2\n    constructor(props) {\n        super(props);\n        var color = \"#2D2D2D\";\n        if (this.props.index % 2 === 0) {\n            color = \"#303030\";\n        }\n\n        this.state = {\n            ID: \"\",\n            imgURL: \"\",\n            bgcolor: color\n        }\n    }\n\n    componentDidMount() {\n        var videoID = this.props.link.split(\"/\");\n        var imgthing = \"https://img.youtube.com/vi/\" + videoID[3] + \"/hqdefault.jpg\";\n        this.setState({ID: videoID, imgURL: imgthing});\n        console.log(this.props.link, videoID, imgthing);\n    }\n\n    render() {\n        return(\n            <Row fluid style={{padding: \"20px\", color: 'white', backgroundColor: this.state.bgcolor}}>\n                <Col sm=\"12\" md=\"6\" style={{textAlign: \"center\"}} >\n                    {this.props.p1} vs {this.props.p2}\n                    <hr style={{borderColor: \"purple\", backgroundColor: \"purple\"}}/>\n                    {this.props.ch1} vs {this.props.ch2}\n                    <hr style={{borderColor: \"purple\", backgroundColor: \"purple\"}}/>\n                    <Link to={\"/event/\" + this.props.event} style={{textDecoration: 'underline'}}>{this.props.event}</Link>\n                </Col>\n                <Col sm=\"12\" md=\"3\" style={{textAlign: \"center\"}}>\n                    <a href={this.props.link}><img alt=\"Thumbnail\" src={this.state.imgURL} height=\"160\" width=\"200\" /></a>\n                </Col>\n            </Row>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Col,\n         Container } from \"reactstrap\";\nimport { withRouter } from 'react-router-dom';\n//API: https://script.google.com/macros/s/AKfycbxplAP3legxV6uzKfRu7fVyQfgkJ9OUvzoVm3zTe-qS5P2PIQ/exec?query=<search/pr>&player=<STRING>\n//get the name from url: this.props.match.params.name\n\nimport MatchContainer from './matchContainer';\n\nconst myAPI = \"https://script.google.com/macros/s/AKfycbxplAP3legxV6uzKfRu7fVyQfgkJ9OUvzoVm3zTe-qS5P2PIQ/exec\";\n\nclass Results extends Component {\n    constructor() {\n        super();\n        this.state = {\n            data: []\n        }\n        this.getResponse.bind(this);\n    }\n\n    componentDidMount() {\n        this.getResponse();\n    }\n\n    getResponse() {\n        fetch(myAPI + (\"?query=search&player=\" + this.props.match.params.name))\n        .then(res => res.json())\n        .then(\n            (result) => {\n                this.setState({\n                    isLoaded: true,\n                    data: result.data\n                });\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n                this.setState({\n                isLoaded: true,\n                error\n                });\n            }\n        )\n        if (this.state.data[0] === undefined) {\n            \n        }\n    }\n\n    render() {\n        return (\n            <Container style={{color: 'white'}} >\n                {\n                    this.state.isLoaded ? \n                    //(<MatchContainer p1={this.state.data[0][0]} p2={this.state.data[0][3]} link={this.state.data[0][6]}/>)\n                        (this.state.data[0] === undefined) ?\n                        (<Col>No results</Col>)\n                        :\n                        this.state.data.map((juice, index) => {\n                            return (<MatchContainer p1={juice[0]} p2={juice[3]} link={juice[6]} ch1={juice[2]} ch2={juice[5]} index={index} event={juice[7]} />)\n                        })\n                    :\n                    (<Col>Loading...</Col>)\n                }\n            </Container>\n        );\n    }\n}\n\nexport default withRouter(Results);","import React, { Component } from 'react';\nimport { Col,\n         Container } from \"reactstrap\";\nimport { withRouter } from 'react-router-dom';\n//API: https://script.google.com/macros/s/AKfycbxplAP3legxV6uzKfRu7fVyQfgkJ9OUvzoVm3zTe-qS5P2PIQ/exec?query=<search/pr>&player=<STRING>\n//get the name from url: this.props.match.params.name\n\nimport MatchContainer from './matchContainer';\n\nconst myAPI = \"https://script.google.com/macros/s/AKfycbxplAP3legxV6uzKfRu7fVyQfgkJ9OUvzoVm3zTe-qS5P2PIQ/exec\";\n\nclass Events extends Component {\n    constructor() {\n        super();\n        this.state = {\n            data: []\n        }\n        this.getResponse.bind(this);\n    }\n\n    componentDidMount() {\n        this.getResponse();\n    }\n\n    getResponse() {\n        fetch(myAPI + (\"?query=list&name=\" + this.props.match.params.evName))\n        .then(res => res.json())\n        .then(\n            (result) => {\n                this.setState({\n                    isLoaded: true,\n                    data: result.data\n                });\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n                this.setState({\n                isLoaded: true,\n                error\n                });\n            }\n        )\n        if (this.state.data[0] === undefined) {\n            \n        }\n    }\n\n    render() {\n        return (\n            <Container style={{color: 'white'}} >\n                {\n                    this.state.isLoaded ? \n                    //(<MatchContainer p1={this.state.data[0][0]} p2={this.state.data[0][3]} link={this.state.data[0][6]}/>)\n                        (this.state.data[0] === undefined) ?\n                        (<Col>No results</Col>)\n                        :\n                        this.state.data.map((juice, index) => {\n                            return (<MatchContainer p1={juice[0]} p2={juice[3]} link={juice[6]} ch1={juice[2]} ch2={juice[5]} index={index} event={juice[7]} />)\n                        })\n                    :\n                    (<Col>Loading...</Col>)\n                }\n            </Container>\n        );\n    }\n}\n\nexport default withRouter(Events);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport NavThing from './components/navbar';\nimport Login from './components/login';\nimport Results from './components/results';\nimport Events from './components/events';\n\nReactDOM.render(\n    <div style={{backgroundColor: \"#333333\"}}>\n        <NavThing />\n        <HashRouter>\n            <Switch>\n                <Route exact path=\"/\" component={App} />\n                <Route path=\"/login\" component={Login} />\n                <Route path=\"/results/:name\" component={Results} />\n                <Route path=\"/event/:evName\" component={Events} />\n            </Switch>\n        </HashRouter>\n    </div>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}