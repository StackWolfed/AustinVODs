{"version":3,"sources":["components/searchbar.js","App.js","serviceWorker.js","components/navbar.js","components/login.js","components/matchContainer.js","components/results.js","index.js"],"names":["SearchBar","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","player","handleSubmit","bind","assertThisInitialized","e","preventDefault","console","log","props","history","push","_this2","react_default","a","createElement","Form","onSubmit","InputGroup","style","paddingTop","Input","type","name","placeholder","value","onChange","setState","target","InputGroupAddon","addonType","Button","Component","withRouter","App","isLogged","path","window","location","pathname","hash","includes","replace","firebase","auth","onAuthStateChanged","user","Container","backgroundColor","Row","Col","sm","md","size","offset","searchbar","Boolean","hostname","match","initializeApp","apiKey","authDomain","NavThing","isSignedIn","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","callbacks","signInSuccess","componentDidMount","currentUser","getIdToken","then","data","theThing","toggle","isOpen","signOut","Navbar","color","dark","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","logOut","displayName","Login","signInSuccessWithAuthResult","Redirect","to","StyledFirebaseAuth_default","firebaseAuth","MatchContainer","index","ID","imgURL","bgcolor","videoID","link","split","imgthing","fluid","padding","textAlign","p1","p2","borderColor","ch1","ch2","alt","src","height","width","Results","getResponse","fetch","params","res","json","result","isLoaded","error","undefined","map","juice","matchContainer_MatchContainer","ReactDOM","render","navbar_NavThing","HashRouter","Switch","Route","exact","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8e82085d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { InputGroup,\n        InputGroupAddon,\n        Input,\n        Button,\n        Form } from \"reactstrap\";\nimport { withRouter } from 'react-router-dom';\n//import firebase from \"firebase\";\n//API: https://script.google.com/macros/s/AKfycbxplAP3legxV6uzKfRu7fVyQfgkJ9OUvzoVm3zTe-qS5P2PIQ/exec?query=<search/pr>&player=<STRING>\n\nclass SearchBar extends Component {\n    constructor() {\n        super();\n        this.state = {\n            player: \"\"\n        }\n\n        this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        console.log(this.state.player);\n        this.props.history.push('/results/' + this.state.player);\n    }\n\n    render() {\n        return (\n            <div>\n                <Form onSubmit={(e) => this.handleSubmit(e)}>\n                    <InputGroup style={{paddingTop: \"10px\"}}>\n                        <Input  type=\"text\"\n                                name=\"search\"\n                                placeholder=\"Player Name\"\n                                value={this.state.player}\n                                onChange={e => this.setState({ player: e.target.value })}/>\n                        <InputGroupAddon addonType=\"append\"><Button >Search</Button></InputGroupAddon>\n                    </InputGroup>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(SearchBar);","import React, { Component } from 'react';\nimport firebase from \"firebase\";\nimport { Container, Row, Col } from \"reactstrap\";\n\nimport SearchBar from \"./components/searchbar\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n        isLogged: false\n    }\n  }\n\n  componentDidMount() {\n    var path = window.location.pathname + window.location.hash;\n    if (path.includes(\"/AustinVODs#/AustinVODs#/\") || path.includes(\"AustinVODs/#/AustinVODs#/\")) {\n        window.location.replace(\"/AustinVODs\");\n    }\n    firebase.auth().onAuthStateChanged((user) => {\n        if (user != null) {\n            this.setState({\n                isLogged: true\n            });\n        } else {\n            this.setState({\n                isLogged: false\n            });\n        }\n      });\n  }\n\n  render() {\n    return (\n      <Container style={{backgroundColor: \"#333333\"}}>\n        <Row>\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }}><SearchBar /></Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\n//Stateless\n/*\n  export const NAME = (props) => {\n    this is already\n    the render function\n  };\n*/\n//State\n/*\n  you need a constructor(props) {\n    super(props) // to call the parent constructor\n    this.state = {\n\n    };\n  }\n*/\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink} from 'reactstrap';\nimport firebase from \"firebase\";\n//import StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyCIPlwX5hVrpR42ETE1O7bwpQNNxMZB2mQ\",\n  authDomain: \"austinvods.firebaseapp.com\"\n})\n  \nexport default class NavThing extends Component {\n    constructor(props) {\n      super(props);\n  \n      this.toggle = this.toggle.bind(this);\n      this.state = {\n        isOpen: false\n      };\n    }\n\n    state = { isSignedIn: false }\n    uiConfig = {\n      signInFlow: \"popup\",\n      signInOptions: [\n        firebase.auth.GoogleAuthProvider.PROVIDER_ID\n      ],\n      callbacks: {\n        signInSuccess: () => false\n      }\n    }\n\n    componentDidMount = () => {\n      firebase.auth().onAuthStateChanged(user => {\n        this.setState({ isSignedIn: !!user });\n        //console.log(\"user\", user);\n        firebase.auth().currentUser.getIdToken().then(data => this.setState({theThing: data}))\n      });\n    }\n\n    toggle() {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    }\n\n    logOut() {\n      firebase.auth().signOut();\n    }\n    //Render Function --------------------------------------------------------------\n    render() {\n      return (\n        <div>\n          <Navbar color=\"dark\" dark expand=\"md\">\n            <NavbarBrand href=\"/AustinVODs\">AustinVODs</NavbarBrand>\n            <NavbarToggler onClick={this.toggle} />\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  {this.state.isSignedIn ? \n                  //(\"\" + firebase.auth().currentUser.getIdToken().i)\n                  (<NavLink onClick={this.logOut}>{firebase.auth().currentUser.displayName}</NavLink>)\n                  :\n                  (<NavLink href=\"#/login\">Login</NavLink>)\n                  }\n                </NavItem>\n              </Nav>\n            </Collapse>\n          </Navbar>\n        </div>\n      );\n    }\n}","import React, { Component } from 'react';\nimport firebase from \"firebase\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport { Row, Col, Container} from \"reactstrap\";\nimport { Redirect } from 'react-router-dom';\n\n// firebase.initializeApp({\n//     apiKey: \"AIzaSyDLoqcbTDMFuurtAyDgVEKZ6qwo0j0Osjk\",\n//     authDomain: \"fir-auth-tutorial-ed11f.firebaseapp.com\"\n//   })\n\nexport default class Login extends Component {\n    constructor() {\n        super();\n        this.state = {\n            isLogged: false\n        }\n    }\n\n    componentDidMount() {\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user != null) {\n                this.setState({\n                    isLogged: true\n                });\n            } else {\n                this.setState({\n                    isLogged: false\n                });\n            }\n          });\n    }\n\n    uiConfig = {\n        signInFlow: \"popup\",\n        signInOptions: [\n          firebase.auth.GoogleAuthProvider.PROVIDER_ID\n        ],\n        callbacks: {\n            signInSuccessWithAuthResult: () => false\n        }\n    }\n\n    render() {\n      return (\n        <div>\n          {this.state.isLogged ? \n            (   \n                <Container>\n                    <Row>\n                        <Col sm=\"12\" md={{ size: 6, offset: 5 }} style={{color: \"white\"}}>You're logged in</Col>\n                        <Redirect to=\"/\" />\n                    </Row>\n                </Container>\n            )\n          :\n            (<StyledFirebaseAuth\n                uiConfig={this.uiConfig}\n                firebaseAuth={firebase.auth()}\n              />)\n          }\n        </div>\n      );\n    }\n  }","import React, { Component } from 'react';\nimport { Row,\n         Col } from \"reactstrap\";\n\nexport default class MatchContainer extends Component {\n    //props: p1, p2, link, ch1, ch2\n    constructor(props) {\n        super(props);\n        var color = \"#2D2D2D\";\n        if (this.props.index % 2 === 0) {\n            color = \"#303030\";\n        }\n\n        this.state = {\n            ID: \"\",\n            imgURL: \"\",\n            bgcolor: color\n        }\n    }\n\n    componentDidMount() {\n        var videoID = this.props.link.split(\"/\");\n        var imgthing = \"https://img.youtube.com/vi/\" + videoID[3] + \"/hqdefault.jpg\";\n        this.setState({ID: videoID, imgURL: imgthing});\n        console.log(this.props.link, videoID, imgthing);\n    }\n\n    render() {\n        return(\n            <Row fluid style={{padding: \"20px\", color: 'white', backgroundColor: this.state.bgcolor}}>\n                <Col sm=\"12\" md=\"6\" style={{textAlign: \"center\"}} >\n                    {this.props.p1} vs {this.props.p2}\n                    <hr style={{borderColor: \"purple\", backgroundColor: \"purple\"}}/>\n                    {this.props.ch1} vs {this.props.ch2}\n                </Col>\n                <Col sm=\"12\" md=\"3\" style={{textAlign: \"center\"}}>\n                    <a href={this.props.link}><img alt=\"Thumbnail\" src={this.state.imgURL} height=\"160\" width=\"200\" /></a>\n                </Col>\n            </Row>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Col,\n         Container } from \"reactstrap\";\nimport { withRouter } from 'react-router-dom';\n//API: https://script.google.com/macros/s/AKfycbxplAP3legxV6uzKfRu7fVyQfgkJ9OUvzoVm3zTe-qS5P2PIQ/exec?query=<search/pr>&player=<STRING>\n//get the name from url: this.props.match.params.name\n\nimport MatchContainer from './matchContainer';\n\nconst myAPI = \"https://script.google.com/macros/s/AKfycbxplAP3legxV6uzKfRu7fVyQfgkJ9OUvzoVm3zTe-qS5P2PIQ/exec\";\n\nclass Results extends Component {\n    constructor() {\n        super();\n        this.state = {\n            data: []\n        }\n        this.getResponse.bind(this);\n    }\n\n    componentDidMount() {\n        this.getResponse();\n    }\n\n    getResponse() {\n        fetch(myAPI + (\"?query=search&player=\" + this.props.match.params.name))\n        .then(res => res.json())\n        .then(\n            (result) => {\n                this.setState({\n                    isLoaded: true,\n                    data: result.data\n                });\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n                this.setState({\n                isLoaded: true,\n                error\n                });\n            }\n        )\n        if (this.state.data[0] === undefined) {\n            \n        }\n    }\n\n    render() {\n        return (\n            <Container style={{color: 'white'}} >\n                {\n                    this.state.isLoaded ? \n                    //(<MatchContainer p1={this.state.data[0][0]} p2={this.state.data[0][3]} link={this.state.data[0][6]}/>)\n                        (this.state.data[0] === undefined) ?\n                        (<Col>No results</Col>)\n                        :\n                        this.state.data.map((juice, index) => {\n                            return (<MatchContainer p1={juice[0]} p2={juice[3]} link={juice[6]} ch1={juice[2]} ch2={juice[5]} index={index} />)\n                        })\n                    :\n                    (<Col>Loading...</Col>)\n                }\n            </Container>\n        );\n    }\n}\n\nexport default withRouter(Results);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport NavThing from './components/navbar';\nimport Login from './components/login';\nimport Results from './components/results';\n\nReactDOM.render(\n    <div style={{backgroundColor: \"#333333\"}}>\n        <NavThing />\n        <HashRouter>\n            <Switch>\n                <Route exact path=\"/\" component={App} />\n                <Route path=\"/login\" component={Login} />\n                <Route path=\"/results/:name\" component={Results} />\n            </Switch>\n        </HashRouter>\n    </div>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}